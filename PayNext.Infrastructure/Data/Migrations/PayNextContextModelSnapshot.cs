// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayNext.Infrastructure;

namespace PayNext.Infrastructure.Data.Migrations
{
    [DbContext(typeof(PayNextContext))]
    partial class PayNextContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PayNext.Core.Entities.Bill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillingCycleDay")
                        .HasColumnType("int");

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextBillDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("OutstandingBill")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("PayNext.Core.Entities.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActiveAtApp")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ValidDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardNumber = "5421765209285822",
                            CreatedDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(2733),
                            IsActive = true,
                            IsActiveAtApp = false,
                            IssueDate = new DateTime(2022, 2, 6, 23, 4, 46, 133, DateTimeKind.Local).AddTicks(5612),
                            ValidDate = new DateTime(2025, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(64)
                        },
                        new
                        {
                            Id = 2,
                            CardNumber = "5383249064902017",
                            CreatedDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3680),
                            IsActive = true,
                            IsActiveAtApp = false,
                            IssueDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3593),
                            ValidDate = new DateTime(2025, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3621)
                        },
                        new
                        {
                            Id = 3,
                            CardNumber = "5547240944242164",
                            CreatedDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3704),
                            IsActive = true,
                            IsActiveAtApp = false,
                            IssueDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3697),
                            ValidDate = new DateTime(2025, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3700)
                        },
                        new
                        {
                            Id = 4,
                            CardNumber = "5537555179872381",
                            CreatedDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3714),
                            IsActive = true,
                            IsActiveAtApp = false,
                            IssueDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3707),
                            ValidDate = new DateTime(2025, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3710)
                        },
                        new
                        {
                            Id = 5,
                            CardNumber = "5447906631230792",
                            CreatedDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3723),
                            IsActive = true,
                            IsActiveAtApp = false,
                            IssueDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3717),
                            ValidDate = new DateTime(2025, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3719)
                        },
                        new
                        {
                            Id = 6,
                            CardNumber = "4064087200235085",
                            CreatedDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3732),
                            IsActive = true,
                            IsActiveAtApp = false,
                            IssueDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3726),
                            ValidDate = new DateTime(2025, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3728)
                        },
                        new
                        {
                            Id = 7,
                            CardNumber = "4556610932416767",
                            CreatedDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3741),
                            IsActive = true,
                            IsActiveAtApp = false,
                            IssueDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3735),
                            ValidDate = new DateTime(2025, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3737)
                        },
                        new
                        {
                            Id = 8,
                            CardNumber = "4024007173812818",
                            CreatedDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3750),
                            IsActive = true,
                            IsActiveAtApp = false,
                            IssueDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3744),
                            ValidDate = new DateTime(2025, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3746)
                        },
                        new
                        {
                            Id = 9,
                            CardNumber = "4024007180147869",
                            CreatedDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3758),
                            IsActive = true,
                            IsActiveAtApp = false,
                            IssueDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3753),
                            ValidDate = new DateTime(2025, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3755)
                        },
                        new
                        {
                            Id = 10,
                            CardNumber = "4024007199373613",
                            CreatedDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3767),
                            IsActive = true,
                            IsActiveAtApp = false,
                            IssueDate = new DateTime(2022, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3761),
                            ValidDate = new DateTime(2025, 2, 6, 23, 4, 46, 135, DateTimeKind.Local).AddTicks(3764)
                        });
                });

            modelBuilder.Entity("PayNext.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CardId")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PayNext.Core.Entities.Bill", b =>
                {
                    b.HasOne("PayNext.Core.Entities.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("PayNext.Core.Entities.User", b =>
                {
                    b.HasOne("PayNext.Core.Entities.Card", "Card")
                        .WithMany()
                        .HasForeignKey("CardId");

                    b.Navigation("Card");
                });
#pragma warning restore 612, 618
        }
    }
}
